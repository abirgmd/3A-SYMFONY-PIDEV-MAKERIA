{% extends 'dashboard.html.twig' %}

{% block title %}Statistiques des Notes par Produit{% endblock %}

{% block content %}
<div class="card">
    <div class="card-header">
        <h4 class="card-title">Statistiques des Notes par Produit</h4>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-8 mx-auto">
                <!-- Sélecteur de type de graphique -->
                <div class="form-group">
                    <label for="chartTypeSelect">Type de graphique :</label>
                    <select id="chartTypeSelect" class="form-control" style="background-color: #1a1a40; color: white;">
                        <option value="pie">Graphique Circulaire (Pie)</option>
                        <option value="bar">Graphique à Barres (Bar)</option>
                        <option value="line">Graphique Linéaire (Line)</option>
                        <option value="area">Graphique en Aire (Area)</option>
                        <option value="doughnut">Graphique en Donut (Doughnut)</option>
                    </select>
                </div>

                <!-- Conteneur pour le canvas -->
                <div style="width: 300px; height: 300px; margin: 0 auto; position: relative;">
                    <canvas id="productPieChart" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-end mt-3">
    <a href="{{ path('app_evaluation_index') }}" class="btn btn-secondary">
        <i class="tim-icons icon-minimal-left"></i> Retour à la liste
    </a>
</div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const categoryData = {{ categoryData|json_encode()|raw }};
            const labels = categoryData.map(data => data.productName);
            const counts = categoryData.map(data => data.evaluationCount);
        const colors = ['#FF66B2', '#D16BFF', '#FFB3E6', '#8A2BE2', '#FF8C00', '#FF4B5C', '#B5E7A0'];

            let chartInstance = null;

            const ctx = document.getElementById('productPieChart').getContext('2d');

            function createChart(type) {
                if (chartInstance) {
                    chartInstance.destroy(); // Supprimer l'ancien graphique
                }

                const datasets = [{
                    label: 'Nombre de Notes',
                    data: counts,
                    backgroundColor: type === 'area' ? colors.map(color => color + '88') : colors, // Transparence pour Area
                    borderColor: colors,
                    borderWidth: 1,
                    fill: type === 'area' // Remplissage activé uniquement pour Area
                }];

                chartInstance = new Chart(ctx, {
                    type: type === 'area' ? 'line' : type, // "Area" utilise un graphique de type "line"
                    data: {
                        labels: labels,
                        datasets: datasets
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return tooltipItem.raw + ' notes';
                                    }
                                }
                            }
                        },
                        scales: (type === 'bar' || type === 'line' || type === 'area') ? {
                            x: { grid: { color: 'rgba(200, 200, 200, 0.2)' } },
                            y: { beginAtZero: true, grid: { color: 'rgba(200, 200, 200, 0.2)' } }
                        } : {}
                    }
                });
            }

            // Créer le graphique initial avec le type "pie"
            createChart('pie');

            // Ajout d'un écouteur d'événement sur le changement du type de graphique
            document.getElementById('chartTypeSelect').addEventListener('change', function (event) {
                const selectedType = event.target.value;
                createChart(selectedType);
            });
        });
    </script>
{% endblock %}
